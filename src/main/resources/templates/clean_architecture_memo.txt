1. 컴포넌트 응집도

1-1. REP - 재사용/릴리스 등가원칙
- 단일 컴포넌트는 응집성(연관성) 높은 클래스와 모듈들로 구성되어야 한다.
- 하나의 컴포넌트에 묶인 클래스와 모듈을 반드시 함께 릴리스(배포) 할 수 있어야한다.
- 하나의 컴포넌트는 동일한 릴리스로 추적 관리되고, 동일한 릴리스 문서에 포함되어야 한다.

1-2. CCP - 공통 폐쇄 원칙(SOLID원칙 중 SRP, OCP원칙과 유사)
- 응집력이 높은 클래스를 같은 컴포넌트로 묶고, 응집력이 낮은 클래스는 다른 컴포넌트로 묶는다.
- 변경의 이유가 여러 개(응집력이 낮은 클래스) 있어서는 안된다.
- 코드의 변경은 여러 컴포넌트로 분산되어 발생하기보다는 단일 컴포넌트에서 발생되는 편이 낫다.
- 물리적, 개념적으로 강하게 결합되어 있는 클래스들은 하나의 컴포넌트에 속해야한다.

1-3. CRP - 공통 재사용 원칙(SOLID원칙 중 ISP원칙과 유사)
- 같이 재사용되는 경향이 있는 클래스와 모듈들은 같은 컴포넌트에 포함되어야 한다.
- 재사용 가능한 클래스는 해당 모듈의 다른 클래스와 상호작용하는 경우가 많고 이들 클래스 사이에는 수많은 의존성이 존재하여 동일한 컴포넌트에 포함되어야 한다.
- 필요하지 않는 것에 의존하지 않는다.


2. 컴포넌트 결합

2-1. ADP - 의존성 비순환 원칙